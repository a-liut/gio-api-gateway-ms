/*
 * API Gateway Service
 *
 * API Gateway Microservice for the Gi√≤ system.
 *
 * API version: 1.0.0
 * Contact: andrea.liut@gmail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package api

import (
	"github.com/a-liut/gio-api-gateway-ms/src/logging"
	"net/http"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      []string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = logging.Logger(handler, route.Name)

		router.
			Methods(route.Method...).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

var routes = Routes{

	Route{
		"GetDeviceById",
		[]string{http.MethodGet},
		"/devices/{deviceId}",
		GetDeviceById,
	},

	Route{
		"GetDevices",
		[]string{http.MethodGet},
		"/devices",
		GetDevices,
	},

	Route{
		"CreateDevice",
		[]string{http.MethodPost},
		"/devices",
		CreateDevice,
	},

	Route{
		"GetDeviceReadings",
		[]string{http.MethodGet},
		"/devices/{deviceId}/readings",
		GetDeviceReadings,
	},
}
